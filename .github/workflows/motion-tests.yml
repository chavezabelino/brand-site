name: Motion & Animation Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  motion-tests:
    name: Run Motion Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build

      - name: Run motion tests with video recording
        run: npm run test:motion
        continue-on-error: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: motion-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: motion-test-videos
          path: test-results/**/video.webm
          retention-days: 14

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('test-results/motion-results.json', 'utf8');
            const data = JSON.parse(results);

            const failedTests = data.suites
              .flatMap(suite => suite.specs)
              .filter(spec => spec.ok === false);

            let comment = '## ❌ Motion Tests Failed\n\n';
            comment += `${failedTests.length} test(s) failed:\n\n`;

            failedTests.forEach(test => {
              comment += `- **${test.title}**\n`;
              comment += `  Location: \`${test.file}\`\n\n`;
            });

            comment += '\n📹 [View test videos in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  motion-regression-check:
    name: Visual Motion Regression
    runs-on: ubuntu-latest
    needs: motion-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download previous test videos
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: motion-test-videos
          path: previous-videos/

      - name: Compare video results
        run: |
          echo "🎬 Motion regression check"
          echo "Comparing current videos with previous run"

          if [ -d "previous-videos" ]; then
            echo "✅ Previous videos found for comparison"
            # Add video comparison logic here if needed
          else
            echo "ℹ️  No previous videos to compare"
          fi

      - name: Generate motion report
        run: |
          echo "# Motion Test Report" > motion-report.md
          echo "" >> motion-report.md
          echo "**Date:** $(date)" >> motion-report.md
          echo "**Commit:** ${{ github.sha }}" >> motion-report.md
          echo "" >> motion-report.md

          if [ -f "test-results/motion-results.json" ]; then
            echo "## Test Results" >> motion-report.md
            echo "See attached artifacts for video recordings" >> motion-report.md
          fi

      - name: Upload motion report
        uses: actions/upload-artifact@v4
        with:
          name: motion-report
          path: motion-report.md
